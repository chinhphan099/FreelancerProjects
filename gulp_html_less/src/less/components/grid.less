/* Variable
------------------------------------------------------------------------*/
@grid-columns: 12;
@grid-gutter: 30px;

@xs-min: 0;
@sm-min: 576px;
@md-min: 768px;
@lg-min: 992px;
@xl-min: 1200px;

@xs-max: (@sm-min - 1);
@sm-max: (@md-min - 1);
@md-max: (@lg-min - 1);
@lg-max: (@xl-min - 1);

// With of .container
@grid-sm: 550px;
@grid-md: 720px;
@grid-lg: 940px;
@grid-xl: 1140px;


/* Mixin For Grid System
------------------------------------------------------------------------*/
// Grid System
.make-grid-columns() {
  .col(@index) {
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index=< @grid-columns) {
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) {
    @{list} {
      position: relative;
      min-height: 1px;
      padding-left: (@grid-gutter / 2);
      padding-right: (@grid-gutter / 2);
    }
  }
  .col(1);
}
.float-grid-columns(@class) {
  .col(@index) {
    @item: ~".col-@{class}-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index=< @grid-columns) {
    @item: ~".col-@{class}-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) {
    @{list} {
      float: left;
    }
  }
  .col(1);
}
.calc-grid-column(@index, @class, @type) when (@type = width) and (@index > 0) {
  .col-@{class}-@{index} {
    width: percentage((@index / @grid-columns));
  }
}
.calc-grid-column(@index, @class, @type) when (@type = push) and (@index > 0) {
  .col-@{class}-push-@{index} {
    left: percentage((@index / @grid-columns));
  }
}
.calc-grid-column(@index, @class, @type) when (@type = push) and (@index = 0) {
  .col-@{class}-push-0 {
    left: auto;
  }
}
.calc-grid-column(@index, @class, @type) when (@type = pull) and (@index > 0) {
  .col-@{class}-pull-@{index} {
    right: percentage((@index / @grid-columns));
  }
}
.calc-grid-column(@index, @class, @type) when (@type = pull) and (@index = 0) {
  .col-@{class}-pull-0 {
    right: auto;
  }
}
.calc-grid-column(@index, @class, @type) when (@type = offset) {
  .col-@{class}-offset-@{index}{
    margin-left: percentage((@index / @grid-columns));
  }
}
.loop-grid-columns(@index, @class, @type) when (@index >= 0) {
  .calc-grid-column(@index, @class, @type);
  .loop-grid-columns((@index - 1), @class, @type);
}
.make-grid(@class) {
  .float-grid-columns(@class);
  .loop-grid-columns(@grid-columns, @class, width);
  .loop-grid-columns(@grid-columns, @class, pull);
  .loop-grid-columns(@grid-columns, @class, push);
  .loop-grid-columns(@grid-columns, @class, offset);
}
.grid-fixed(@gutter: @grid-gutter) {
  margin-right: auto;
  margin-left: auto;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
  .clearfix();
}
.make-row(@gutter: @grid-gutter) {
  margin-left: (@gutter / -2);
  margin-right: (@gutter / -2);
  .clearfix();
}
.make-xs-column(@columns; @gutter: @grid-gutter) {
  position: relative;
  float: left;
  width: percentage((@columns / @grid-columns));
  min-height: 1px;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
}
.make-xs-column-offset(@columns) {
  margin-left: percentage((@columns / @grid-columns));
}
.make-xs-column-push(@columns) {
  left: percentage((@columns / @grid-columns));
}
.make-xs-column-pull(@columns) {
  right: percentage((@columns / @grid-columns));
}
.make-sm-column(@columns; @gutter: @grid-gutter) {
  position: relative;
  min-height: 1px;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
  @media (min-width: @sm-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-sm-column-offset(@columns) {
  @media (min-width: @sm-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-sm-column-push(@columns) {
  @media (min-width: @sm-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-sm-column-pull(@columns) {
  @media (min-width: @sm-min) {
    right: percentage((@columns / @grid-columns));
  }
}
.make-md-column(@columns; @gutter: @grid-gutter) {
  position: relative;
  min-height: 1px;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
  @media (min-width: @md-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-md-column-offset(@columns) {
  @media (min-width: @md-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-push(@columns) {
  @media (min-width: @md-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-pull(@columns) {
  @media (min-width: @md-min) {
    right: percentage((@columns / @grid-columns));
  }
}
.make-lg-column(@columns; @gutter: @grid-gutter) {
  position: relative;
  min-height: 1px;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
  @media (min-width: @lg-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-offset(@columns) {
  @media (min-width: @lg-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-push(@columns) {
  @media (min-width: @lg-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-pull(@columns) {
  @media (min-width: @lg-min) {
    right: percentage((@columns / @grid-columns));
  }
}
.make-xl-column(@columns; @gutter: @grid-gutter) {
  position: relative;
  min-height: 1px;
  padding-left: (@gutter / 2);
  padding-right: (@gutter / 2);
  @media (min-width: @xl-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-offset(@columns) {
  @media (min-width: @xl-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-push(@columns) {
  @media (min-width: @xl-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-pull(@columns) {
  @media (min-width: @xl-min) {
    right: percentage((@columns / @grid-columns));
  }
}

/* Utitile Classes
------------------------------------------------------------------------*/
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.text-left {
  text-align: left !important;
}
.text-right {
  text-align: right !important;
}
.text-center {
  text-align: center !important;
}
.text-justify {
  text-align: justify !important;
}
.text-lowercase {
  text-transform: lowercase;
}
.text-uppercase {
  text-transform: uppercase;
}
.text-capitalize {
  text-transform: capitalize;
}

// Hidden
.hidden {
  display: none !important;
}
.hidden-xs {
  @media (max-width: @xs-max) {
    display: none !important;
  }
}
.hidden-sm {
  @media (min-width: @sm-min) and (max-width: @sm-max) {
    display: none !important;
  }
}
.hidden-md {
  @media (min-width: @md-min) and (max-width: @md-max) {
    display: none !important;
  }
}
.hidden-lg {
  @media (min-width: @lg-min) {
    display: none !important;
  }
}
.hidden-xl {
  @media (min-width: @xl-min) {
    display: none !important;
  }
}

// Hidden Down
.hidden-sm-down {
  @media (max-width: @sm-max) {
    display: none !important;
  }
}
.hidden-md-down {
  @media (max-width: @md-max) {
    display: none !important;
  }
}
.hidden-lg-down {
  @media (max-width: @lg-max) {
    display: none !important;
  }
}
.hidden-xl-down {
  display: none !important;
}

// Hidden Up
.hidden-xs-up {
  display: none !important;
}
.hidden-sm-up {
  @media (min-width: @sm-min) {
    display: none !important;
  }
}
.hidden-md-up {
  @media (min-width: @md-min) {
    display: none !important;
  }
}
.hidden-lg-up {
  @media (min-width: @lg-min) {
    display: none !important;
  }
}

// Print
.visible-print-table {
  display: none !important;
  @media print {
    display: table !important;
  }
}
.visible-print-block {
  display: none !important;
  @media print {
    display: block !important;
  }
}
.visible-print-inline {
  display: none !important;
  @media print {
    display: inline !important;
  }
}
.visible-print-inline-block {
  display: none !important;
  @media print {
    display: inline-block !important;
  }
}
.hidden-print {
  @media print {
    display: none !important;
  }
}


/* Generate CSS classes
------------------------------------------------------------------------*/

.container {
  .grid-fixed();
  max-width: @grid-lg;
  /*
  @media (min-width: @sm-min) {
    max-width: @grid-sm;
  }
  @media (min-width: @md-min) {
    max-width: @grid-md;
  }
  @media (min-width: @lg-min) {
    max-width: @grid-lg;
  }
  @media (min-width: @xl-min) {
    max-width: @grid-xl;
  }
  */
}
.container-fluid {
  .grid-fixed();
}
.row {
  .make-row();
  &.no-gutter {
    margin-right: 0;
    margin-left: 0;
    & > [class^="col-"],
    & > [class*=" col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}
.make-grid-columns();
.make-grid(xs);
@media (min-width: @sm-min) {
  .make-grid(sm);
}
@media (min-width: @md-min) {
  .make-grid(md);
}
@media (min-width: @lg-min) {
  .make-grid(lg);
}
@media (min-width: @xl-min) {
  .make-grid(xl);
}
